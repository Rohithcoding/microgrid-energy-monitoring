version: '3.8'

services:
  web:
    build:
      context: .
      target: base
    ports:
      - "10000:10000"
    environment:
      - PORT=10000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/microgrid
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ENVIRONMENT=development
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/backend/__pycache__
    depends_on:
      - db
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:10000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=microgrid
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Frontend service (development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:10000
    depends_on:
      - web

  # Celery worker for background tasks
  worker:
    build: .
    command: celery -A backend.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/microgrid
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - .:/app

  # Celery beat for scheduled tasks
  beat:
    build: .
    command: celery -A backend.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/microgrid
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - .:/app

volumes:
  postgres_data:
  redis_data:
